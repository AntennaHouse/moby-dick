<?xml version="1.0" encoding="UTF-8"?>
<project name="moby-dick" basedir="." default="pdf">
  <description>Process "Moby-Dick" files.</description>
<!-- Copyright 2020-2025 Antenna House, Inc. -->

<!--
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS
    IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
    express or implied.  See the License for the specific language
    governing permissions and limitations under the License.
-->

  <dirname property="system.basedir" file="${ant.file.moby-dick}"/>

  <pathconvert property="system.basedir.converted" dirsep="/">
    <path location="${system.basedir}" />
    <!-- Ant under cygwin uses a lowercase drive letter, which some
	 Java programs don't recognise as a drive letter, so
	 translate. -->
    <map from="c:" to="/C:"/>
    <map from="d:" to="/D:"/>
    <map from="e:" to="/E:"/>
  </pathconvert>

  <pathconvert property="basedir.converted" dirsep="/">
    <path location="${basedir}" />
    <!-- Ant under cygwin uses a lowercase drive letter, which some
	 Java programs don't recognise as a drive letter, so
	 translate. -->
    <map from="c:" to="/C:"/>
    <map from="d:" to="/D:"/>
    <map from="e:" to="/E:"/>
  </pathconvert>

  <!-- Local file of properties determining or describing local
       configuration. -->
  <property name="build.local.properties"
	    location="${basedir.converted}/build.local.properties"/>
  <property file="${build.local.properties}"/>

  <!-- File of properties determining or describing local
       configuration. -->
  <property name="build.properties"
	    location="${basedir.converted}/build.properties"/>
  <property file="${build.properties}"/>

  <!-- Local file of properties determining or describing system
       configuration. -->
  <property name="system.local.properties"
	    location="${system.basedir}/system.local.properties"/>
  <property file="${system.local.properties}"/>
  <!-- File of properties determining or describing system
       configuration. -->
  <property name="system.properties"
	    location="${system.basedir}/system.properties"/>
  <property file="${system.properties}"/>

  <basename property="basename" file="${xml}" suffix=".xml" />

  <property name="xsl.dir" value="${system.basedir.converted}" />
  <property name="fo.dir" value="${system.basedir.converted}" />
  <property name="html.dir" value="${basedir.converted}" />

  <!-- XSL processor location depends on OS. -->
  <condition property="xsl.processor" value="${xsl.processor.windows}">
    <os family="windows" />
  </condition>
  <condition property="xsl.processor" value="${xsl.processor.mac}">
    <os family="mac" />
  </condition>
  <property name="xsl.processor" value="${xsl.processor.unix}" />

  <!-- saxon.jar location depends on OS. -->
  <condition property="saxon.jar" value="${saxon.jar.windows}">
    <os family="windows" />
  </condition>
  <condition property="saxon.jar" value="${saxon.jar.mac}">
    <os family="mac" />
  </condition>
  <property name="saxon.jar" value="${saxon.jar.unix}" />

  <target name="fo">
    <dependset>
      <srcfileset dir="${fo.dir}" includes="${style.fo}, fo-layout.xsl" />
      <targetfileset file="${basedir.converted}/${basename}.fo" />
    </dependset>
    <xslt in="${xml}"
	  out="${basedir.converted}/${basename}.fo"
	  style="${fo.dir}/${style.fo}"
	  classpath="${saxon.jar}">
      <factory name="net.sf.saxon.TransformerFactoryImpl">
	<attribute
	   name="http://saxon.sf.net/feature/allow-external-functions" 
	   value="true"/>
	<attribute
	   name="http://saxon.sf.net/feature/validation" 
	   value="false"/>
	<attribute
	   name="http://saxon.sf.net/feature/version-warning" 
	   value="false"/>
      </factory>
      <param name="lang" expression="${lang}" />
      <param name="debug" expression="${debug}" if="debug" />
      <param name="no-rule" expression="${no-rule}" if="no-rule" />
    </xslt>
  </target>

  <target name="pdf"
	  depends="fo">
    <exec executable="${xsl.processor}"
	  dir="${basedir.converted}">
      <arg value="-x" />
      <arg value="3" />
      <arg value="-peb" />
      <arg value="1" />
      <arg value="-o" />
      <arg value="${basename}.pdf" />
      <arg value="-d" />
      <arg value="${basename}.fo" />
    </exec>
  </target>

  <target name="gui"
	  depends="fo">
    <exec executable="AHFormatter"
	  dir="${basedir.converted}"
	  spawn="true">
      <arg value="-s" />
      <arg value="-d" />
      <arg value="${basename}.fo" />
    </exec>
  </target>

  <target name="echoproperties">
    <echoproperties />
  </target>

</project>
